31-JAN-2016 Matthew J. Wolf <matthew.wolf.hpsdr@speciosus.net>

THE 32 BIT VERSION of the PLUG-IN IS UNTESTED!!!!!

The openHPSDR Plug-in for Wireshark is written to disassemble the openHPSDR 
Ethernet protocol.
The protocol is still under development. 

The current public released protocol documentation list located at:
http://svn.tapr.org/repos_sdr_hpsdr/trunk/Angelia_new_protocol/Documentation/

Version 0.0.1:

* Initial Beta Version

  - Wireshark version 2.0.1 
  - There is disassembly of Erase Reply. Erase Reply is Command Reply command 
    0x03 from the Hardware.
  - The rest of the Command Reply protocol (port 1024) is disassembled
  - The other protocols are not full disassembled.
  - The other protocols are identfied. Only the sequence number is 
    disassembled. 

-------------------------------------------------------------------------------

The openHPSDR Ethernet protocol is comprised of eleven different datagram 
formats. Below is a table that lists the default ports and the protocol names
and abbreviation that I use in the WireShark dissector. Traffic originated by
the host uses the port number as the UDP destination port. Traffic originated
by the hardware uses the port as the source UDP port. 

Host and Hardware Use the Same Port
-----------------------------------
Port   Name
1024   Command Reply (cr) 
xxxx   Memory Mapped (mem) 

Host to Hardware - destination UDP port
---------------------------------------
1025   DDC Command (ddcc)
1026   DUC Command (ducc)
1027   High Priority Command (hpc)
1028   DDC Audio Base Port (ddca)
1029   DUC I&Q Data Base Port (duciq)

Hardware to Host -source UDP port
---------------------------------
1025   High Priority Status (hps)
1026   Mic / Line Samples (micl)
1027   Wide Band Base Port (wbd)
1035   DDC I&Q Data (ddciq)

There are three configurable preferences in the WireShark dissector. 

They are all boolean (on or off) preferences.

-"Strict Checking of Datagram Size"
  Disable checking for added bytes at the end of the datagrams.
  Turning off disables a warning meassge.

-"Strict Pad Checking"
  Strict checking of the amount of pad bytes at the end of the datagrams.
  When enabled, Wireshark (not the openHPSDR dissector) will display
  a "Malformed Packet" error for a datagram without the correct
  number of pad bytes. 
  When disabled, checking is only for one pad byte instead of checking
  for the correct number of pad bytes.

-"strict_program_data_size"
 The openHPSDR dissector assums that the sequence number in the Program datagram 
 (port 1024 from host with command 0x05) can be used as a indicator of the 
 number programing blocks sent. 
 Program Data Roll Over is when the Sequence Number * 256 (max program bytes 
 per program datagram) s larger than the number of Program Blocks listed in the 
 datagram.
 Turning off disables a warning meassge.  

There is one known issue. Switching, in the same capture, from a non-default 
port to default a default port can cause Wireshark to crash. The cause is a
fix I implemented to allow for columns to added and deleted. I could fix this
issue by tracking port changes. I believe that 99% of the time host and hardware
will use the default ports. Then I have no idea, other then when testing, when the 
ports will change.     
    


 


